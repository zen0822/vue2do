(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{540:function(t,e,l){"use strict";l.d(e,"g",(function(){return p})),l.d(e,"f",(function(){return w})),l.d(e,"e",(function(){return i})),l.d(e,"c",(function(){return f})),l.d(e,"a",(function(){return m})),l.d(e,"d",(function(){return d}));for(var o=l(107),a=l(12),c=l(163),z=l(41),n=Object(o.c)(),b=[],r=0;r<33;r++)b.push({text:"test-"+r,name:"name-"+r,size:"size-"+r,en:"en-"+r,value:r});var u=Object(z.e)("VUE2DO"),i=Object(z.e)(b),s=(Object(o.b)(a.appContent.get),Object(o.b)(a.compStage.get)),p=(Object(o.b)(a.deviceSize.get),Object(o.b)(a.typeUI.get)),w=Object(o.b)(a.typeTheme.get),f=function(t){var e=t.currentTarget;s.scrollTop=e.offsetTop},m=function(t,e){return t.path+"#"+e},d=function(){function t(){var t=document.querySelector(".z-css-device-size"),e="";t&&(e=getComputedStyle(t,":after").getPropertyValue("content"),n.dispatch(a.deviceSize,e))}window.addEventListener("resize",Object(c.a)(t,100)),t()},g={store:n,methods:{_initComp:function(){},anchorLink:function(t){return this.$route.path+"#"+t},goAnchor:function(t){var e=t.currentTarget;this.compStage.scrollTop=e.offsetTop}},computed:{varPrefix:function(){return u},testOpt:function(){return b},appContent:function(){return this.$store.getters[a.appContent.get]},compStage:function(){return this.$store.getters[a.compStage.get]},typeUI:function(){return this.$store.getters[a.typeUI.get]},typeTheme:function(){return this.$store.getters[a.typeTheme.get]},deviceSize:function(){return this.$store.getters[a.deviceSize]}},mounted:function(){var t=this;function e(){var e=document.querySelector(".z-css-device-size"),l="";e&&(l=getComputedStyle(e,":after").getPropertyValue("content"),t.$store.dispatch(a.deviceSize,l))}this._initComp(),window.addEventListener("resize",Object(c.a)(e,100)),e()}};e.b=g},586:function(t,e,l){},587:function(t,e,l){var o=l(131);t.exports=function(t){var e,l="",a={};return a.section=e=function(t,a){var c=this&&this.block;this&&this.attributes,l=l+'<section><router-link class="anchor-title"'+o.attr("id",t,!0,!0)+' tag="h1"'+o.attr(":to",'anchorLink("'+t+'")',!0,!0)+'><span @click="goAnchor">'+o.escape(null==(e=a)?"":e)+"</span></router-link>",c?c&&c():l+="<p>暂无内容</p>",l+="</section>"},l+='<div><article class="example-article">',a.section.call({block:function(){l=l+'<z-row :gap="10"><z-col :l="4" :xs="12">name:</z-col><z-col :l="4" :xs="8"><z-input number init-val="test-input"></z-input></z-col><z-col :l="4" :xs="4">测试1</z-col></z-row><z-row :gap="10"><z-col :l="4" :xs="12">test1:</z-col><z-col :l="8" :xs="12"><z-input required label="ex: 张三"></z-input></z-col></z-row><z-code :theme="typeTheme">'+o.escape(null==(e='<z-row :gap="10">')?"":e)+"\n  "+o.escape(null==(e='<z-col :l="4" :xs="12">name: </z-col>')?"":e)+"\n  "+o.escape(null==(e='<z-col :l="4" :xs="8">')?"":e)+"\n    "+o.escape(null==(e="<z-input")?"":e)+"\n        number\n        "+o.escape(null==(e='init-val="test-input"')?"":e)+"\n    "+o.escape(null==(e="</z-input>")?"":e)+"\n  "+o.escape(null==(e="</z-col>")?"":e)+"\n  "+o.escape(null==(e='<z-col :l="4" :xs="4">')?"":e)+"\n    "+o.escape(null==(e='<z-input init-val="test-input" query-name="test"></z-input>')?"":e)+"\n  "+o.escape(null==(e="</z-col>")?"":e)+"\n"+o.escape(null==(e="</z-row>")?"":e)+"\n"+o.escape(null==(e='<z-row :gap="10">')?"":e)+"\n  "+o.escape(null==(e='<z-col :l="4" :xs="12">test1: </z-col>')?"":e)+"\n  "+o.escape(null==(e='<z-col :l="8" :xs="12">')?"":e)+"\n    "+o.escape(null==(e='<z-input required label="ex: 张三"></z-input>')?"":e)+"\n  "+o.escape(null==(e="</z-col>")?"":e)+"\n"+o.escape(null==(e="</z-row>")?"":e)+"</z-code>"}},"start","开始使用"),a.section.call({block:function(){l+='<z-table border="row" stripe auto :pageSize="10"><template slot="thead" v-for="item in [&quot;名字&quot;, &quot;类型&quot;, &quot;可选值&quot;, &quot;说明&quot;]"><z-table-col>{{ item }}</z-table-col></template><z-table-row slot="1"><z-table-col>align</z-table-col><z-table-col>String</z-table-col><z-table-col>(start, end, *center)</z-table-col><z-table-col>定义了列在行上垂直方向上的对齐方式，对应 flex 的 align-items 属性</z-table-col></z-table-row><z-table-row slot="2"><z-table-col>gap</z-table-col><z-table-col>Number</z-table-col><z-table-col>——</z-table-col><z-table-col>每列的间隔是多少（px）-- 草案</z-table-col></z-table-row><z-table-row slot="3"><z-table-col>justify</z-table-col><z-table-col>String</z-table-col><z-table-col>(start, end, center, *justify)</z-table-col><z-table-col>定义了列在行上的水平空间的对齐方式，对应 flex 的 justify-content 属性</z-table-col></z-table-row><z-table-row slot="4"><z-table-col>wrap</z-table-col><z-table-col>String</z-table-col><z-table-col>(nowrap | wrap)</z-table-col><z-table-col>定义列的换行模式，对应 flex 的 flex-wrap 属性（nowrap | wrap）</z-table-col></z-table-row></z-table>'}},"rowProps","row 的 props 数据类型"),a.section.call({block:function(){l+='<z-table border="row" stripe auto :pageSize="10"><template slot="thead" v-for="(item, index) in [&quot;名字&quot;, &quot;类型&quot;, &quot;可选值&quot;, &quot;说明&quot;]"><z-table-col :max-width="index === 3 ? &quot;30%&quot; : &quot;&quot;">{{ item }}</z-table-col></template><z-table-row slot="1"><z-table-col>gap</z-table-col><z-table-col>Number</z-table-col><z-table-col>(1~12)</z-table-col><z-table-col>定义间隔的宽度（px），覆盖行设置的间隔 (5, 10, 20, 30, 40, 50)</z-table-col></z-table-row><z-table-row slot="2"><z-table-col>pull</z-table-col><z-table-col>Number</z-table-col><z-table-col>(1~12)</z-table-col><z-table-col>定义了列在 x 反方向偏移的栅格数</z-table-col></z-table-row><z-table-row slot="3"><z-table-col>push</z-table-col><z-table-col>Number</z-table-col><z-table-col>(1~12)</z-table-col><z-table-col>定义了列在 x 正方向偏移的栅格数</z-table-col></z-table-row><z-table-row slot="4"><z-table-col>offset</z-table-col><z-table-col>Number</z-table-col><z-table-col>(1~12)</z-table-col><z-table-col>定义了列离开头的栅格数</z-table-col></z-table-row><z-table-row slot="5"><z-table-col>span</z-table-col><z-table-col>Number</z-table-col><z-table-col>(1~12)</z-table-col><z-table-col>定义了列在行上的水平跨度（采用 12 栏栅格）</z-table-col></z-table-row><z-table-row slot="6"><z-table-col>xs</z-table-col><z-table-col>Number</z-table-col><z-table-col>(1~12)</z-table-col><z-table-col>加小型设备的水平跨度栅格数</z-table-col></z-table-row><z-table-row slot="7"><z-table-col>s</z-table-col><z-table-col>Number</z-table-col><z-table-col>(1~12)</z-table-col><z-table-col>小型设备的水平跨度栅格数</z-table-col></z-table-row><z-table-row slot="8"><z-table-col>m</z-table-col><z-table-col>Number</z-table-col><z-table-col>(1~12)</z-table-col><z-table-col>中型设备的水平跨度栅格数</z-table-col></z-table-row><z-table-row slot="9"><z-table-col>l</z-table-col><z-table-col>Number</z-table-col><z-table-col>(1~12)</z-table-col><z-table-col>大型设备的水平跨度栅格数</z-table-col></z-table-row><z-table-row slot="10"><z-table-col>xl</z-table-col><z-table-col>Number</z-table-col><z-table-col>(1~12)</z-table-col><z-table-col>加大型设备的水平跨度栅格数</z-table-col></z-table-row><z-table-row slot="11"><z-table-col>grid</z-table-col><z-table-col>Object</z-table-col><z-table-col>(1~12)</z-table-col><z-table-col><p>集合所有设备水平跨度的栅格数，例如</p>\n{xs: 4, l: 8, span: 9}</z-table-col></z-table-row></z-table>'}},"colProps","col 的 props 数据类型"),l+="</article></div>"}},630:function(t,e,l){"use strict";l.r(e),l(586);var o=l(587),a=l.n(o),c=l(540);e.default={name:"PageCompGrid",template:a()(),mixins:[c.b],data:function(){return{testName:"test"}}}}}]);